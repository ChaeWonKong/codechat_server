{"version":3,"sources":["global_styles.js","Components/Comment/CommentCard.jsx","Components/Comment/index.js","Routes/Chat/Chat.jsx","Routes/Chat/index.js","Routes/Landing/Landing.jsx","Routes/Landing/index.js","Routes/List/ChatList.jsx","Routes/List/index.js","App/App.jsx","App/index.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","reset","CommentCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","children","nickname","state","comment","_this$state","react_default","a","createElement","CommentContainer","align","author","avatar","src","alt","content","Text","datetime","tooltip","title","moment","format","fromNow","Component","styled","Comment","CommentCard_templateObject","p","_templateObject2","path","match","socket","io","connect","transports","Footer","Layout","Chat","message","comments","location","code","_this2","on","_ref","setState","concat","toConsumableArray","_ref2","emit","e","defineProperty","target","name","value","_ref3","_this3","map","_ref4","idx","key","_this4","Container","ConA","CodeBox","react_simple_code_editor_lib_default","onValueChange","handleCodeInput","highlight","languages","js","padding","style","fontFamily","fontSize","height","lineHeight","ChatBox","renderComments","InputBox","input","allowClear","onChange","handleTextInput","onPressEnter","handleSubmitMessage","es_button","onClick","div","Chat_templateObject","Chat_templateObject2","_templateObject3","_templateObject4","_templateObject5","Title","Typography","Landing","onTextChange","Landing_Container","Landing_InputBox","level","type","StyledInput","placeholder","react_router_dom","to","pathname","StyledButton","Landing_templateObject","Landing_templateObject2","Input","Landing_templateObject3","Button","Landing_templateObject4","data","ChatList","ChatList_Container","list","dataSource","itemLayout","renderItem","item","Item","Meta","description","ChatList_templateObject","App","Fragment","react_router","exact","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58254445.chunk.js","sourcesContent":["import reset from \"styled-reset\";\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n${reset};\n@import url(\"https://use.fontawesome.com/releases/v5.8.1/css/all.css\");\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.6/antd.min.css\");\n@import url('https://fonts.googleapis.com/css?family=Nanum+Gothic|Nanum+Myeongjo|Nanum+Pen+Script');\n\n  * {\n      box-sizing: border-box;\n  }\n\n  body{\n    font-family: 'Nanum Gothic', sans-serif;\n  }\n\n  #root {\n    height: 100%;\n  }\n\n  a{\n    color: unset;\n    &:hover{\n      color: unset;\n    }\n  }\n\n  strong{\n    font-weight: 700;\n  }\n  \n  button{\n    cursor: pointer;\n    background-color: white;\n    outline: none;\n    border: none;\n    &:active {\n      outline: none;\n      border: none;\n    }\n  }\n\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Comment, Icon, Tooltip, Avatar } from \"antd\";\nimport moment from \"moment\";\n\nclass CommentCard extends Component {\n  constructor(props) {\n    super(props);\n    const { children, nickname } = props;\n    this.state = { comment: children, nickname };\n  }\n  render() {\n    const { nickname, comment } = this.state;\n    return (\n      <CommentContainer\n        // actions={actions}\n        align={this.props.align}\n        author={this.props.align === \"flex-start\" ? <p>{nickname}</p> : null}\n        avatar={\n          this.props.align === \"flex-start\" ? (\n            <Avatar\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n              alt=\"Han Solo\"\n            />\n          ) : null\n        }\n        content={<Text align={this.props.align}>{comment}</Text>}\n        datetime={\n          <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\n            <span>{moment().fromNow()}</span>\n          </Tooltip>\n        }\n      />\n    );\n  }\n}\n\nconst CommentContainer = styled(Comment)`\n  display: flex;\n  justify-content: ${props => props.align};\n`;\n\nconst Text = styled.p`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${props => props.align};\n  max-width: 10rem;\n  background: #eee;\n  border-radius: 1rem;\n  padding: 1rem;\n  margin: 1rem;\n  line-height: 1rem;\n`;\n\nexport default CommentCard;\n","import CommentCard from \"./CommentCard\";\n\nexport default CommentCard;\n","import React, { Component } from \"react\";\nimport { Input, Button, Layout } from \"antd\";\nimport styled from \"styled-components\";\nimport CommentCard from \"../../Components/Comment\";\nimport Editor from \"react-simple-code-editor\";\nimport io from \"socket.io-client\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\n\nlet path = \"http://my-env.c6x2ggbux3.ap-northeast-2.elasticbeanstalk.com/\";\nif (path.match(\"localhost\")) path = \"http://localhost:5000\";\n\nconst socket = io.connect(path, { transports: [\"polling\"] });\n\nconst { Footer } = Layout;\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      comments: [],\n      nickname: props.location.state.nickname,\n      code: \"\"\n    };\n  }\n\n  componentDidMount() {\n    socket.on(\"chat message\", ({ message, nickname }) => {\n      this.setState({\n        comments: [...this.state.comments, { nickname, message }]\n      });\n    });\n    socket.on(\"code\", ({ code, nickname }) => {\n      this.setState({ code });\n    });\n  }\n\n  handleSubmitMessage() {\n    const { nickname, message } = this.state;\n    socket.emit(\"chat message\", { nickname, message });\n    this.setState({ message: \"\" });\n  }\n\n  handleTextInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleCodeInput({ code }) {\n    const { nickname } = this.state;\n    // this.setState({\n    //   code\n    // });\n    socket.emit(\"code\", { code, nickname });\n  }\n\n  renderComments() {\n    const { comments } = this.state;\n    return comments.map(({ message, nickname }, idx) => (\n      <CommentCard\n        key={idx}\n        nickname={nickname}\n        align={this.state.nickname === nickname ? \"flex-end\" : \"flex-start\"}\n      >\n        {message}\n      </CommentCard>\n    ));\n  }\n\n  render() {\n    return (\n      <Container>\n        <ConA>\n          <CodeBox>\n            <Editor\n              value={this.state.code}\n              onValueChange={code => this.handleCodeInput({ code })}\n              highlight={code => highlight(code, languages.js)}\n              padding={14}\n              style={{\n                fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                fontSize: 16,\n                height: \"100%\",\n                lineHeight: \"1rem\"\n              }}\n            />\n          </CodeBox>\n          <ChatBox>{this.renderComments()}</ChatBox>\n        </ConA>\n        <InputBox>\n          <Input\n            value={this.state.message}\n            allowClear\n            name=\"message\"\n            onChange={e => this.handleTextInput(e)}\n            onPressEnter={() => this.handleSubmitMessage()}\n          />\n          <Button onClick={() => this.handleSubmitMessage()}>Send</Button>\n        </InputBox>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst ConA = styled.div`\n  display: flex;\n  width: 100%;\n  flex: 1;\n`;\n\nconst CodeBox = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background: rgb(253, 246, 227);\n`;\n\nconst ChatBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding-bottom: 4rem;\n`;\n\nconst InputBox = styled(Footer)`\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n`;\n","import Chat from \"./Chat\";\n\nexport default Chat;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Input, Button, Typography } from \"antd\";\nimport styled from \"styled-components\";\n\nconst { Title } = Typography;\n\nexport default class Landing extends Component {\n  constructor() {\n    super();\n    this.state = { nickname: \"\" };\n  }\n\n  onTextChange = e => {\n    this.setState({\n      nickname: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <InputBox>\n          <Title level={2} type=\"secondary\">\n            chat chat!\n          </Title>\n          <StyledInput\n            placeholder=\"Nickname\"\n            allowClear\n            onChange={this.onTextChange}\n          />\n          <Link\n            to={{\n              pathname: \"/list\",\n              state: {\n                nickname: this.state.nickname\n              }\n            }}\n          >\n            <StyledButton>Start Chat!</StyledButton>\n          </Link>\n        </InputBox>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 8rem;\n  text-align: center;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-top: 0.3rem;\n  width: 8rem;\n`;\n","import Landing from \"./Landing\";\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { List, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nconst data = [\n  {\n    title: \"Ant Design Title 1\"\n  },\n  {\n    title: \"Ant Design Title 2\"\n  },\n  {\n    title: \"Ant Design Title 3\"\n  },\n  {\n    title: \"Ant Design Title 4\"\n  }\n];\n\nclass ChatList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { nickname: this.props.location.state.nickname };\n  }\n\n  render() {\n    return (\n      <Container>\n        <Link\n          to={{\n            pathname: \"/chat\",\n            state: {\n              nickname: this.state.nickname\n            }\n          }}\n        >\n          <List\n            dataSource={data}\n            itemLayout=\"horizontal\"\n            renderItem={item => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                  }\n                  title={<p>{item.title}</p>}\n                  description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                />\n              </List.Item>\n            )}\n          />\n        </Link>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default ChatList;\n","import ChatList from \"./ChatList\";\n\nexport default ChatList;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { GlobalStyle } from \"../global_styles\";\nimport Chat from \"../Routes/Chat\";\nimport Landing from \"../Routes/Landing\";\nimport ChatList from \"../Routes/List\";\n// import styled from \"styled-components\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Landing} />\n        <Route path=\"/chat\" component={Chat} />\n        <Route path=\"/list\" component={ChatList} />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}